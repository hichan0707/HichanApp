///	>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
///	@file		Allocator.h
///	@brief		
///	>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#ifndef HICHAN_APP_ALLOCATE_H
#define HICHAN_APP_ALLOCATE_H


namespace Hichan
{
	///	=============================================================================
	///	@brief		アロケータークラス
	///	=============================================================================
	class Allocator
	{
	public:
		static const unsigned int SIGNATURE;



		///	-----------------------------------------------------------------------------
		///	@brief		コンストラクタ
		///	-----------------------------------------------------------------------------
		Allocator();
	
		///	-----------------------------------------------------------------------------
		///	@brief		デストラクタ
		///	-----------------------------------------------------------------------------
		~Allocator();
		
		///	-----------------------------------------------------------------------------
		///	@brief		メモリ確保
		///	-----------------------------------------------------------------------------
		void* _alloc( const size_t size );

		///	-----------------------------------------------------------------------------
		///	@brief		メモリ解放
		///	-----------------------------------------------------------------------------
		void _free( unsigned char *ptr );

	private:
		// 前情報
		struct Header
		{
		public:
			unsigned int _signature;	// シグネチャ
			unsigned int _flg;			// 状態保持用
			char _file[256];			// 確保ファイル名
			unsigned int _line;			// [_file]内の行数
			unsigned int _size;			// 確保したサイズ
			unsigned char *_this;		// 自身アドレス
			unsigned char *_next;		// 前のアドレス
			unsigned char *_prev;		// 次のアドレス
		};
		
		// 後情報
		struct Footer
		{
		public:
			unsigned int _signature;	// シグネチャ
			unsigned int _size;			// 確保したサイズ
		};

		unsigned char *_buf; // 確保プール
	};
}

#endif